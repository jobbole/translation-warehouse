# Akin's Laws of Spacecraft Design
1. Engineering is done with numbers. Analysis without numbers is only an opinion.  
   工程学建立在数学的基础上，定性分析只是一个选择。
2. To design a spacecraft right takes an infinite amount of effort. This is why it's a good idea to design them to operate when some things are wrong .  
   完全正确的设计一个航天器，需要付出无尽的努力。因此，能够设计一个有些瑕疵也能正常运作的航天器是一个好主意
3. Design is an iterative process. The necessary number of iterations is one more than the number you have currently done. This is true at any point in time.  
   设计是一个迭代的过程，而必要的迭代次数，总比你当前已经完成的要多。任何时候这一点都无比正确。
4. Your best design efforts will inevitably wind up being useless in the final design. Learn to live with the disappointment.
   你费尽心机设计的东西，最后可能并没有派上用场。学会承受失望。
5. (Miller's Law) Three points determine a curve.
   Miller法则：三点确定一个曲线
6. (Mar's Law) Everything is linear if plotted log-log with a fat magic marker.
   Mar法则：
7. At the start of any design effort, the person who most wants to be team leader is least likely to be capable of it.
   在开始进行设计前，那个最想成为团队领袖的人，往往最没有能力做领袖
8. In nature, the optimum is almost always in the middle somewhere. Distrust assertions that the optimum is at an extreme point.
   实际上，最优状态是一种中间态。不要相信那些声称最优状态是某种极限状态的观点。
9. Not having all the information you need is never a satisfactory excuse for not starting the analysis.
   还没有收集到全部必要的信息，并不是你不开始分析的借口
10. When in doubt, estimate. In an emergency, guess. But be sure to go back and clean up the mess when the real numbers come along.
    如果有疑虑，进行估计。紧急情况下，进行猜测。但是当得到真实数据后，要回过头来梳理清楚。
11. Sometimes, the fastest way to get to the end is to throw everything out and start over.
    有时候，最快的办法就是抛掉一切从新来过。
12. There is never a single right solution. There are always multiple wrong ones, though.
    正确的解决方案永远不止一种。错误的解决办法也不止一种。
13. Design is based on requirements. There's no justification for designing something one bit "better" than the requirements dictate.
    设计是基于需求的。没有理由设计一个东西，比需求要求的还要“好一些”

14. (Edison's Law) "Better" is the enemy of "good".
    Edison法则：“更好”是“好”的敌人。
15. (Shea's Law) The ability to improve a design occurs primarily at the interfaces. This is also the prime location for screwing it up.
    Shea法则：
16. The previous people who did a similar analysis did not have a direct pipeline to the wisdom of the ages. There is therefore no reason to believe their analysis over yours. There is especially no reason to present their analysis as yours.
    前人所做过的类似的分析，并不是什么时代智慧。没有理由认为他们的分析优于你的分析，更不能把他们的分析，当作是你的分析。
17. The fact that an analysis appears in print has no relationship to the likelihood of its being correct.
    书上的分析并不一定是正确的
18. Past experience is excellent for providing a reality check. Too much reality can doom an otherwise worthwhile design, though.
      
19. The odds are greatly against you being immensely smarter than everyone else in the field. If your analysis says your terminal velocity is twice the speed of light, you may have invented warp drive, but the chances are a lot better that you've screwed up.

20. A bad design with a good presentation is doomed eventually. A good design with a bad presentation is doomed immediately.

21. (Larrabee's Law) Half of everything you hear in a classroom is crap. Education is figuring out which half is which.

22. When in doubt, document. (Documentation requirements will reach a maximum shortly after the termination of a program.)

23. The schedule you develop will seem like a complete work of fiction up until the time your customer fires you for not meeting it.

24. It's called a "Work Breakdown Structure" because the Work remaining will grow until you have a Breakdown, unless you enforce some Structure on it.

25. (Bowden's Law) Following a testing failure, it's always possible to refine the analysis to show that you really had negative margins all along.

26. (Montemerlo's Law) Don't do nuthin' dumb.

27. (Varsi's Law) Schedules only move in one direction.

28. (Ranger's Law) There ain't no such thing as a free launch.

29. (von Tiesenhausen's Law of Program Management) To get an accurate estimate of final program requirements, multiply the initial time estimates by pi, and slide the decimal point on the cost estimates one place to the right.

30. (von Tiesenhausen's Law of Engineering Design) If you want to have a maximum effect on the design of a new engineering system, learn to draw. Engineers always wind up designing the vehicle to look like the initial artist's concept.

31. (Mo's Law of Evolutionary Development) You can't get to the moon by climbing successively taller trees.

32. (Atkin's Law of Demonstrations) When the hardware is working perfectly, the really important visitors don't show up.

33. (Patton's Law of Program Planning) A good plan violently executed now is better than a perfect plan next week.

34. (Roosevelt's Law of Task Planning) Do what you can, where you are, with what you have.

35. (de Saint-Exupery's Law of Design) A designer knows that he has achieved perfection not when there is nothing left to add, but when there is nothing left to take away.

36. Any run-of-the-mill engineer can design something which is elegant. A good engineer designs systems to be efficient. A great engineer designs them to be effective.

37. (Henshaw's Law) One key to success in a mission is establishing clear lines of blame.

38. Capabilities drive requirements, regardless of what the systems engineering textbooks say.

39. Any exploration program which "just happens" to include a new launch vehicle is, de facto, a launch vehicle program.

39. (alternate formulation) The three keys to keeping a new human space program affordable and on schedule:
       1)  No new launch vehicles.
       2)  No new launch vehicles.
       3)  Whatever you do, don't develop any new launch vehicles.

40. (McBryan's Law) You can't make it better until you make it work.

41. There's never enough time to do it right, but somehow, there's always enough time to do it over.

42. Space is a completely unforgiving environment. If you screw up the engineering, somebody dies (and there's no partial credit because most of the analysis was right...)

